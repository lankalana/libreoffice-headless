name: Build and publish docker container

on:
  push:
    tags:
      - v*

jobs:
  build-amd64:
    name: Build amd64 version
    runs-on: ubuntu-24.04
    steps:
      - name: Load version number
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Download source code
        run: wget https://downloadarchive.documentfoundation.org/libreoffice/old/${VERSION}/src/libreoffice-${VERSION}.tar.xz -O libre.tar.xz
      - name: Extract source code
        run: tar -xJf libre.tar.xz -C ./ --strip-components=1
      - name: Install dependencies
        run: | 
          sudo apt update
          sudo apt install -y git build-essential zip ccache junit4 libkrb5-dev nasm graphviz python3 python3-dev python3-setuptools qtbase5-dev libkf5coreaddons-dev libkf5i18n-dev libkf5config-dev libkf5windowsystem-dev libkf5kio-dev libqt5x11extras5-dev autoconf libcups2-dev libfontconfig1-dev gperf libxslt1-dev xsltproc libxml2-utils libxrandr-dev libx11-dev bison flex libgtk-3-dev libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev ant ant-optional libnss3-dev libavahi-client-dev libxt-dev
      - name: Generate config
        run: ./autogen.sh --disable-dependency-tracking --disable-gui --disable-gdb-index --disable-xmlhelp --without-java --disable-postgresql-sdbc --with-galleries=no --without-system-fontconfig --with-theme="breeze_dark" --enable-release-build --enable-lto --enable-optimized=yes --without-package-format
      - name: Build
        run: make

      - name: Upload artifact
        uses: pyTooling/upload-artifact@v4
        with:
          name: libre-amd64
          path: instdir
          retention-days: 1
          compression-level: 0

  build-arm64:
    name: Build arm64 version
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Load version number
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Download source code
        run: wget https://downloadarchive.documentfoundation.org/libreoffice/old/${VERSION}/src/libreoffice-${VERSION}.tar.xz -O libre.tar.xz
      - name: Extract source code
        run: tar -xJf libre.tar.xz -C ./ --strip-components=1
      - name: Install dependencies
        run: | 
          sudo apt update
          sudo apt install -y git build-essential zip ccache junit4 libkrb5-dev nasm graphviz python3 python3-dev python3-setuptools qtbase5-dev libkf5coreaddons-dev libkf5i18n-dev libkf5config-dev libkf5windowsystem-dev libkf5kio-dev libqt5x11extras5-dev autoconf libcups2-dev libfontconfig1-dev gperf libxslt1-dev xsltproc libxml2-utils libxrandr-dev libx11-dev bison flex libgtk-3-dev libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev ant ant-optional libnss3-dev libavahi-client-dev libxt-dev
      - name: Generate config
        run: ./autogen.sh --disable-dependency-tracking --disable-gui --disable-gdb-index --disable-xmlhelp --without-java --disable-postgresql-sdbc --with-galleries=no --without-system-fontconfig --with-theme="breeze_dark" --enable-release-build --enable-lto --enable-optimized=yes --without-package-format
      - name: Build
        run: make

      - name: Upload artifact
        uses: pyTooling/upload-artifact@v4
        with:
          name: libre-arm64
          path: instdir
          retention-days: 1
          compression-level: 0

  build-docker-container:
    runs-on: ubuntu-latest
    name: Build and publish docker container
    needs: [build-amd64, build-arm64]
    steps:
      - name: Download amd64 build result
        uses: pyTooling/download-artifact@v4
        with:
          name: libre-amd64
          path: ./libre-amd64
      - name: Download arm64 build result
        uses: pyTooling/download-artifact@v4
        with:
          name: libre-arm64
          path: ./libre-arm64

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Load Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=edge
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max